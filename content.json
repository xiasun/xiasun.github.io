{"meta":{"title":"Summer News","subtitle":"孙夏的博客 | Summer Sun's blog","description":null,"author":"Summer Sun","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"A Summary CBCT Segmentation Platform Version 1.0","slug":"teeth-seg-version-1-notes","date":"2017-08-21T01:07:40.000Z","updated":"2017-08-22T05:54:09.166Z","comments":true,"path":"2017/08/21/teeth-seg-version-1-notes/","link":"","permalink":"http://yoursite.com/2017/08/21/teeth-seg-version-1-notes/","excerpt":"","text":"In the past six months, I was working on designing and developing a Windows desktop software, for teeth segmentation and reconstruction from CBCT (kind of CT) images. The system is built with QT. I used VTK for visualization related functions and OpenCV for image processing. WorkflowThis platform is built as a QT widget application, with QVTKWidgets integrated, we could use VTK inside the QT framework. I use vtkDicomReader to read DICOM images by selecting a directory, the data is read as vtkImageData. I use vtkImageViewer2 to render slices. The vtkImageViewer2 is suitable for display 3d image by slice view, by setting view orientation and slice ID, we can have a good view of CBCT data. Below is the overall interface of the software, you can see three different view of the 3D CBCT data. Since the initial data is of 3 dimensions, I slice it into a series of 2D images for easy processing afterward. I use vtkContourWidget to let users select region of interests (ROI) on an initial slice, ROI means the rough bounding box of a tooth. Initial slice is commonly a slice with a clear boundary of each tooth. Below is a figure to select ROI of an initial slice. After picking up an ROI, segmentation procedures are started. The contour will shrink from ROI (the initial contour), iterate and iterate towards the boundary of a tooth. The last iterate contour is considered to be the segmentation results, or to say the boundary of selected tooth. Below is the segmentation result of a tooth of one slice. When the boundary of a tooth in slice N is found, I push this vtkContourWidget into a vector, convert it into a binary image and save it with ID to a specific directory. And this contour is enlarged for 1 or 2 pixels by some kind of dilate algorithm, it is used as the initial contour of next slice, next could be either upper or lower, then the segmentation procedures are looped. See the looping figure among slices below. After segmentations of all slices are done, I read all the binary images from workspace with id order to form a 3D image data, and use vtkImageMarchingCubes to reconstruct the 3D model of it. The STL model is exported with vtkSTLWriter. The reconstructed model of one tooth and all lower teeth are shown below. Segmentation AlgorithmAn enhanced level-set method is introduced as segmentation algorithm of 2D image slice. The base of this algorithm is DRLSE introduced by Prof. Chunming Li. I add a shape constraint on its energy function, which makes the contour of current slice not too far away from the previous one. When it comes to the root parts, I design a thresholding method to remove some extra parts between roots. This method is not robust yet so I am not going to explain in detail. AccelerationLevel-set method is based on iterated shrinking or expanding of initial contours so it might be extremely slow with a fixed iteration times. I calculate the area difference of current slice and previous slice, if this difference is small enough, then the iteration is stopped. I use OpenCV’s CUDA module to accelerate the calculation. The overall system has no parallel structure at all, so I can just speed up Matrix calculation with GPU. Most image processing methods do have a CUDA implementation, so I use them to rewrite the code, and speed is up to 10 times of the origin GPU version. Future ImprovementsThere are several problems remained in the current system. First, VTK is actually not that useful for my feature requirements. I will have to convert data structures between OpenCV Mat, vtkImageData and vtkContourWidget for every iteration. So I will try to remove VTK from my system or use it only in few specific conditions. Second, current GPU acceleration only supports NVIDIA GPUs, some kind of AMD support is also required. Finally, the segmentation algorithm is not robust enough to fit data from different parts, different people, and different devices. Especially for the teeth crown adjacency. I also want to do some machine learning based improvements for the algorithm, this could be possible after data collection from current software for some time. ReferenceVTK User List: This is the mailing lists for VTK users and developers, email subscribing is required.OpenCV Questions: This is a QA community of OpenCV, just like a small StackOverflow. Actually, the above two communities are of really low popularity, you may get very few responses to your posts. But some historical problems do deserve some attentions. Professor Li Chunming: His work on image segmentation is of very high citation with very nice demo MATLAB code. @Wonju, South Korea","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Image Segmentation","slug":"Image-Segmentation","permalink":"http://yoursite.com/tags/Image-Segmentation/"},{"name":"OpenCV","slug":"OpenCV","permalink":"http://yoursite.com/tags/OpenCV/"},{"name":"VTK","slug":"VTK","permalink":"http://yoursite.com/tags/VTK/"},{"name":"QT","slug":"QT","permalink":"http://yoursite.com/tags/QT/"}],"keywords":[]},{"title":"迟到的2017 | Hello 2017 (Hope Not Too Late)","slug":"late-hello-2017","date":"2017-04-08T11:07:05.000Z","updated":"2017-08-22T05:55:14.218Z","comments":true,"path":"2017/04/08/late-hello-2017/","link":"","permalink":"http://yoursite.com/2017/04/08/late-hello-2017/","excerpt":"","text":"惊恐的发现2017年的四分之一已经过去了，读研也半年了，擦擦擦，说好的开始写博客整理遇到的问题呢？！ 过去的2016，主要在上课，这学期就只剩中特和老板的课了（小金刚保佑我的计算理论），假期玩得比较嗨，二月三月按部就班的写代码，也没发生什么特别的，CT图像分割弄了个无比纠结的框架，VTK+OpenCV，交互一塌糊涂跑起来还慢得要命，讲道理这块要做的还有好多，摔！唯一的好消息是，丹顺利录取了南师大。哦还有托钱师兄的福换到了翠柏的宿舍。 接下来想想事情好多呀，首先要搞牙了，想到要拔四颗心里还是很慌，争取4月份带上牙套拔。然后图像分割这块科研和工程还是要两手抓，这是个长期的工作，现在的进度实在伤不起，我也想做个可用性强一点，功能合理一点的产品，算法改进改进争取发个paper。春季课程结束了，也该考虑要不要去老板公司多挣点钱了，反正在实验室也是做牙齿，在公司也是做牙齿。健身啊健身，真的要成为每天的功课，身体比学位重要。 最后，希望能经常整理整理遇到的问题，发到这里来，上学期有上课的理由，这学期真不能偷懒了。再过一年我也要开始找工作了，各方面知识真心要系统的准备准备。 学而不思则罔，思而不学则怠。以前觉得初中语文课本学的这句话又土又没逼格，现在看看真是贼有道理。 @杭州 Being so idle for the last half year since I entered graduate school last year. I discover to my horror that a quarter of year 2017 has been wasted. I have to start blogging, for knowledge and skills I met. Currently the CBCT segmentation project has a rough model but there still remains a lot to do, both in research and development. I hope I could make this software easy to use and strong enough in functionality, and I also wish I could post a paper in the topic of 3d image segmentation. Learning without thought is labor lost, thought without learning is idle. This Confucius sentence really make sense. @Hangzhou","categories":[],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"http://yoursite.com/tags/碎碎念/"}],"keywords":[]},{"title":"Hexo Asset Folders Tricks","slug":"post-img-conf","date":"2016-10-29T07:17:24.000Z","updated":"2016-10-29T07:40:25.273Z","comments":true,"path":"2016/10/29/post-img-conf/","link":"","permalink":"http://yoursite.com/2016/10/29/post-img-conf/","excerpt":"","text":"Hexo provides an individual asset folder for each post. Users can use asset method to access those resources in asset folders easily. The procedures for using asset folder is described in official documentation. However, the asset method does not support those properties like width and height, so I would like to recommend using raw img tag with a complete path to get resources in asset folders. The two methods listed below are exactly the same, but the img tag could provide more properties:1&#123;% asset_img sample.jpg Chrome proxy configuration %&#125; 1&lt;img src=&quot;2016/09/21/name-of-post/sample.jpg&quot; width=&quot;75%&quot; height=&quot;75%&quot; alt=&quot;Firefox proxy configuration&quot; title=&quot;Firefox proxy configuration&quot;&gt;","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"tricks","slug":"tricks","permalink":"http://yoursite.com/tags/tricks/"}],"keywords":[]},{"title":"C++中字符型的语义表示法 | Character Literals in C++","slug":"char-literals-cpp","date":"2016-10-03T14:57:12.000Z","updated":"2016-10-04T05:10:22.394Z","comments":true,"path":"2016/10/03/char-literals-cpp/","link":"","permalink":"http://yoursite.com/2016/10/03/char-literals-cpp/","excerpt":"","text":"今天偶然被问起一个很简单的关于字符类型（Char）赋值的问题，突然有点懵逼，下面就总结一下c++中字符型赋值的情况（虽然没什么卵用）。最基本的情况是下面这样的，直接赋一个字符（包括转义字符（Escape Sequences）），如下所示：12char c;c = 'a'; 转义字符中，两种情况比较特殊，一个是八进制（Octal），一个是十六进制（Hexadecimal）。八进制值在“\\”后面跟不多于三个八进制数字，表示该八进制数对应的ASCII字符。如果超过了三个数，则语法查验就会报错，如果八进制表示的值超过了255，则编译报错。十六进制值在“\\”后面跟若干个十六进制数字，表示该十六进制数对应的ASCII字符。如果十六进制表示的值超过了255，则编译报错。八进制和十六进制代码举例如下所示：1234567char c;c = '\\100'; // @c = '\\400'; // 八进制400 = 256，编译时报错c = '\\1001'; // 语法检验就报错c = '\\x0050'; // Pc = '\\x100'; // 十六进制100 = 256，编译时报错 如果单引号里有不只一个字符，那么它就是一个实现定义值（Implementation-deﬁned Value），也就是在不同环境下有不同的实现结果，但实现方法必须被该环境的文档所指出。我查询了微软的文档，对于不只一个字符的情况，字符型的值将取最低位的一个字符（右边）。而不只一个字符的情况，最多可以有四个字符（包括含八进制和十六进制在内的转义字符），如果超过四个字符则语法查验时报错。那当八进制、十六进制混合在一起时，八进制的终止是“/”后的第一个超过八进制表示范围的数字（大于7），十六进制的终止是“/”后的第一个超过十六进制表示范围的数字（大于G）。123456789c = 'abcd'; // dc = 'a\\100c'; // cc = 'x\\40b'; // b，此处b超过了八进制数范围，故八进制数位40，最低位字符为bc = 'b\\3770'; // 0, 此处八进制达到了三位数，位377，最低位字符为0c = 'c\\400c'; // 报错，此处八进制数值超过256范围c = 'd\\x0050z'; // z，此处因为z超过了十六进制的数值范围，所以十六进制数为0050，最低位字符zc = 'e\\x0050c'; // 报错，此处c没有超过十六进制数字范围，故此处十六进制数为0050c，超过了256的范围 最后还又一种类似八进制和十六进制的是通用字符名（Universal Character Names）”\\u”后面跟四位，”\\U”后面跟八位,表示十六进制数对应的相关字符。用法与八进制和十六进制差不多，但它们可以表达远超ASCII范围的字符。12c = '\\U00000041'; // Ac = '\\u0041'; // A 以上便是我对C++字符型的一些探索，欢迎各位交流。","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}],"keywords":[]},{"title":"ShadowSocks Client Installation and Proxy Configuration on Ubuntu 16.04","slug":"ubuntu-ss-notes","date":"2016-09-21T02:45:50.000Z","updated":"2016-10-29T07:15:54.718Z","comments":true,"path":"2016/09/21/ubuntu-ss-notes/","link":"","permalink":"http://yoursite.com/2016/09/21/ubuntu-ss-notes/","excerpt":"","text":"I recently switched to ShadowSocks (Client) from different kinds of VPN clients, those VPNs never last long and often have unstable connection. Using ShadowSocks on Windows is pretty easy, we just have to run a GUI and do some server configuration on it, the client would automatically start system proxy. However, let ShadowSocks works properly on Ubuntu do require some works. This post assumes no prior environment installed &amp; configured except Ubuntu itself (ShadowSocks server access is required, you could buy one or set up one yourself). Step 1: Install ShadowSocks through PIPShadowSocks installed from apt-get is of low version and cannot support many password method, I recommend a installation using PIP.Install PIP:1sudo apt-get install python-pip Install ShadowSocks through PIP1pip install shadowsocks Step 2: ShadowSocks clients configurationAfter installed ShadowSocks we have to set server IP, password and many arguments for a proper connection, you may configure it using Terminal commands, but I recommend creating a configuration file.Create a ShadowSocks configuration file (json) and put it somewhere you like with content below12345678&#123;\"server\": \"for.example.xyz\",\"server_port\": 10644,\"local_port\": 1080,\"password\": \"123456\",\"timeout\": 600,\"method\": \"rc4-md5\"&#125; Now you can start your ShadowSocks client through command below1sslocal -c path/to/your/configuration/file/created/above start Step 3.1: Firefox proxy configurationShadowSocks follows socks5 proxy, so we cannot directly access http pages. Firefox is the default browser of ubuntu, so we first have to configure proxy on it.Go to “Preference-&gt;Advanced-&gt;Network-&gt;Connection-&gt;Setting”, select “Manual proxy configuration” and enter ShadowSocks default socks host 127.0.0.1 with port 1080, don’t forget to select the “SOCKS v5” checkbox. Step 3.2: Chrome proxy configurationAfter configure proper proxy on Firefox, you may want to use Chrome now. First download and install Chrome from Firefox (you may use apt-get but for these commonly-used and well-developed software I prefer to download from browser directly). Then we need a proxy management plugin, I recommend Switch Omega. However, install Chrome plugin requires connection to google which is not easy somewhere, so we first use Terminal command below to configure chrome proxy to conncect Google.1google-chrome --proxy-server=socks5://127.0.0.1:1080 Now chrome is started with proxy above. Now search for Switch Omega in Google Chrome App Center and install it. After install Switch Omega on Chrome, configure our socks5 proxy in it like below.Now next time you could start Chrome freely and use proxy to connect google. ReferenceI learned skills above from this two post, list here for you to reference: Ubuntu14.04使用Shadowsocks及转换HTTP代理 – 蔓草札记Linux Ubuntu桌面系统下使用shadowsocks 安装chrome","categories":[],"tags":[{"name":"Network;","slug":"Network","permalink":"http://yoursite.com/tags/Network/"}],"keywords":[]},{"title":"老司机带带我 | Graduate School Hello World","slug":"first-day-zju","date":"2016-09-11T01:46:39.000Z","updated":"2017-08-22T05:54:51.782Z","comments":true,"path":"2016/09/11/first-day-zju/","link":"","permalink":"http://yoursite.com/2016/09/11/first-day-zju/","excerpt":"","text":"今天正式注册开始了研究生的学业。浑浑噩噩地过了大学四年，没有信心找到好工作申到好学校，就选择了继续读书，至今也不知道这个坑入得对不对。 接下来将近三年的日子里，虽然没了几年前的牛逼哄哄的梦想，但也要按部就班踏踏实实地做自己要做的事情。也不知道老板还会安排我做些什么，牙齿还是多维体数据还是什么其它的？谁晓得呢。既然来了CAD，许多热门的东西就难以接触了，很多东西也不是我能选择的了。只希望自己： 锻炼身体，提升形象; 多留些时间做些提升自己的东西，尤其是对自己专业发展有利的； 实验室的项目能研究地深入一点，不能简单地完成任务，争取发点文章专利； 总结做的点点滴滴，吸收碎片化的知识。 Summer加油！Summer牛逼！@杭州 I have just registered for my graduate study this morning. As a fucking mediocre student, I still have no idea whether it’s correct for me to further my graduate study. Hope I could do every thing step by step in the next 2.5 years.I don’t have that much freedom for my graduate study &amp; projects, I just hope I could: Improve my body and appearance physically; Spare more time for those things that could benefit my future career; Step deeper in my lab study instead of simply finishing tasks, try to do some papers and patents; Collect and absorb every fragment knowledge I meet in my study and life. All the best Summer!@Hangzhou","categories":[],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"http://yoursite.com/tags/碎碎念/"}],"keywords":[]}]}